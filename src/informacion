
sesion 2----------------------------------------------------------------------------------------------------------

1. Memory Space (Espacio de memoria)

En programaci√≥n, cuando declaras una variable o constante, el computador reserva un espacio en la memoria para almacenar su valor.

Ejemplo: Si declaras int edad = 25;, el computador guarda un n√∫mero entero (int) en memoria, ocupando un espacio determinado (por ejemplo, 4 bytes en muchos sistemas).

El tama√±o depende:

Del tipo de dato (int, double, char, etc.).

De la arquitectura del sistema.

Al finalizar el programa, ese espacio se libera.

Idea clave: Cada variable o constante ocupa memoria y debe tener un nombre para acceder a ella.

2. Strongly Typed (Fuertemente tipado)

Significa que el lenguaje obliga a respetar el tipo de dato de las variables y no permite asignar otro tipo sin conversi√≥n expl√≠cita.

Ejemplo en un lenguaje fuertemente tipado (Java, C#):

int x = 5;
x = "Hola"; // ‚ùå Error


Ejemplo en un lenguaje d√©bilmente tipado (JavaScript):

let x = 5;
x = "Hola"; // ‚úîÔ∏è Permitido


Ventaja: Previene errores y da m√°s control.

3. Constants (Constantes)

Son valores que no cambian durante la ejecuci√≥n.

Se declaran una vez y no pueden modificarse.

Se usan para valores fijos y seguros.

Ejemplo en Java:

final double PI = 3.1416;

4. Good Practices (Buenas pr√°cticas)
4.1 Naming Styles (Estilos de escritura)

UpperCamelCase ‚Üí Cada palabra inicia con may√∫scula, sin espacios.
Ej: NombreCompleto ‚Äî Usado para clases/tipos.

lowerCamelCase ‚Üí Igual, pero la primera palabra en min√∫scula.
Ej: nombreCompleto ‚Äî Usado para variables/m√©todos.

SCREAMING_SNAKE_CASE ‚Üí Todo en may√∫sculas con guiones bajos.
Ej: MAX_USERS ‚Äî Usado para constantes.

4.2 Be Descriptive (Ser descriptivo)

El nombre debe explicar qu√© representa.

edadUsuario ‚úîÔ∏è

ed ‚ùå

4.3 Clear Prefixes and Suffixes (Prefijos y sufijos claros)

Ayudan a identificar prop√≥sito o tipo.
Ej: contadorClientes, nombreArchivoTxt.

4.4 Do Not Use Abbreviations (No usar abreviaciones)

cantUsr ‚ùå

cantidadUsuarios ‚úîÔ∏è

5. Allowed Characters (Caracteres permitidos) & Restrictions (Restricciones)

No accents (Sin acentos)
a√±os ‚ùå ‚Üí anios ‚úîÔ∏è

No special characters (Sin caracteres especiales)
Ej: @, #, %, - ‚ùå

No numbers at the beginning (Sin n√∫meros al inicio)
2dias ‚ùå ‚Üí dias2 ‚úîÔ∏è

No blank spaces (Sin espacios)
nombre usuario ‚ùå ‚Üí nombreUsuario ‚úîÔ∏è

Case sensitive (Distinguir may√∫sculas/min√∫sculas)
edad ‚â† Edad

Do not use reserved words (No usar palabras reservadas)
Ej: class, int, for ‚ùå

üìå Resumen r√°pido:

Style (Estilo)	Example (Ejemplo)	Common Use (Uso com√∫n)
UpperCamelCase	NombreCompleto	Clases, tipos
lowerCamelCase	nombreCompleto	Variables, m√©todos
SCREAMING_SNAKE_CASE	MAX_USERS	Constantes

-----------------------------------------------------------------------------------------------------------------------------------